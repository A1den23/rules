
proxy-providers:
  FlowerCloud:
    url: "你的订阅链接"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: Direct

# 节点信息
proxies:
  - {name: Direct, type: direct}

# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.market.xiaomi.com"
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query

  # namesever尽量用运营商提供的DNS
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
 
pr: &select {type: select, proxies: [], include-all: true, filter: "新加坡|坡|狮城|SG|Singapore|港|HK|(?i)Hong|日|JP|(?i)Japan|台|新北|彰化|TW|Taiwan|美|US|(?i)States|America"}
proxy-groups:
  - {name: 🚀 Proxies, type: select, proxies: [🇭🇰 HongKong, 🇯🇵 Japan, 🇸🇬 Singapore, 🇺🇲 UnitedStates], include-all: true}
  - {name: 🪙 Binance, type: select, proxies: [🇭🇰 HongKong, 🇯🇵 Japan, 🇸🇬 Singapore, 🇺🇲 UnitedStates], include-all: true}
  - {name: 📹 YouTube, type: select, proxies: [🚀 Proxies], include-all: true}
  - {name: 🍎 Apple, type: select, proxies: [Direct, 🚀 Proxies]}
  - {name: 🎮 Steam, type: select, proxies: [🚀 Proxies, Direct]}
  - {name: 🎵 Spotify, << : *select}
  - {name: 📺 Bilibili, type: select, proxies: [Direct], include-all: true, filter: "台|新北|彰化|TW|Taiwan"}
  - {name: 🎞️ PikPak, << : *select}
  - {name: 🎮 Game, type: select, proxies: [🚀 Proxies]}
  - {name: 🅱️ Bybit, << : *select}
  - {name: 🎯 Direct, type: select, proxies: [Direct, 🚀 Proxies]}
  - {name: 🐟 Others, type: select, proxies: [🚀 Proxies, Direct]}
  - {name: 🇭🇰 HongKong, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
  - {name: 🇯🇵 Japan, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$" }
  - {name: 🇸🇬 Singapore, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(港|台|韩|日|美)).)*$" }
  - {name: 🇺🇲 UnitedStates, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|日|韩|新)).)*$"}

# 规则匹配
rules:
  - RULE-SET, myRules,🚀 Proxies
  - RULE-SET, DirectList,🎯 Direct
  - RULE-SET, lan,🎯 Direct
  - RULE-SET, download,🎯 Direct
  - RULE-SET, private_domain,🎯 Direct
  - RULE-SET, privatetracker,🎯 Direct
  - RULE-SET, steam_cn_domain,🎯 Direct
  - RULE-SET, binance_domain,🪙 Binance
  - RULE-SET, apple_cn_domain,🍎 Apple
  - RULE-SET, apple_domain,🍎 Apple
  - RULE-SET, steam_domain,🎮 Steam
  - RULE-SET, youtube_domain,📹 YouTube
  - RULE-SET, spotify_domain,🎵 Spotify
  - RULE-SET, bilibili_domain,📺 Bilibili
  - RULE-SET, bilibili_intl_domain,📺 Bilibili
  - RULE-SET, pikpak_domain,🎞️ PikPak
  - RULE-SET, game,🎮 Game
  - RULE-SET, bybit_domain,🅱️ Bybit
  - RULE-SET, proxy_domain,🚀 Proxies
  - RULE-SET, cn_domain,🎯 Direct
  - RULE-SET, cn_ip,🎯 Direct
  - MATCH,🐟 Others

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  apple_cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"}
  steam_cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam@cn.mrs"}
  steam_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam.mrs"}
  binance_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/binance.mrs"}
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  spotify_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"}  
  bilibili_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.mrs"}
  bilibili_intl_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/biliintl.mrs"}  
  pikpak_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/pikpak.mrs"}  
  bybit_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bybit.mrs"}    
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  proxy_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo-lite/geosite/proxy.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  
  DirectList: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Direct/Direct.list"}
  lan: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.list"}
  download: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Download/Download.list"}
  privatetracker: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PrivateTracker/PrivateTracker.list"}
  myRules: { <<: *class, url: "https://raw.githubusercontent.com/A1den23/rules/main/MyRules.list"}
  game: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game.list"}

  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
